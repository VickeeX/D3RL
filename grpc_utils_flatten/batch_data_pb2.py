# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: batch_data.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='batch_data.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x10\x62\x61tch_data.proto\"=\n\tBatchData\x12\x0e\n\x06states\x18\x01 \x03(\r\x12\x0f\n\x07\x61\x63tions\x18\x02 \x03(\x02\x12\x0f\n\x07rewards\x18\x03 \x03(\x02\"\x1f\n\x0cReceiveReply\x12\x0f\n\x07\x62oolean\x18\x02 \x01(\x08\x32\x38\n\x11TransferBatchData\x12#\n\x04Send\x12\n.BatchData\x1a\r.ReceiveReply\"\x00\x62\x06proto3')
)




_BATCHDATA = _descriptor.Descriptor(
  name='BatchData',
  full_name='BatchData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='states', full_name='BatchData.states', index=0,
      number=1, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='actions', full_name='BatchData.actions', index=1,
      number=2, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rewards', full_name='BatchData.rewards', index=2,
      number=3, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20,
  serialized_end=81,
)


_RECEIVEREPLY = _descriptor.Descriptor(
  name='ReceiveReply',
  full_name='ReceiveReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='boolean', full_name='ReceiveReply.boolean', index=0,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=83,
  serialized_end=114,
)

DESCRIPTOR.message_types_by_name['BatchData'] = _BATCHDATA
DESCRIPTOR.message_types_by_name['ReceiveReply'] = _RECEIVEREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

BatchData = _reflection.GeneratedProtocolMessageType('BatchData', (_message.Message,), dict(
  DESCRIPTOR = _BATCHDATA,
  __module__ = 'batch_data_pb2'
  # @@protoc_insertion_point(class_scope:BatchData)
  ))
_sym_db.RegisterMessage(BatchData)

ReceiveReply = _reflection.GeneratedProtocolMessageType('ReceiveReply', (_message.Message,), dict(
  DESCRIPTOR = _RECEIVEREPLY,
  __module__ = 'batch_data_pb2'
  # @@protoc_insertion_point(class_scope:ReceiveReply)
  ))
_sym_db.RegisterMessage(ReceiveReply)



_TRANSFERBATCHDATA = _descriptor.ServiceDescriptor(
  name='TransferBatchData',
  full_name='TransferBatchData',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=116,
  serialized_end=172,
  methods=[
  _descriptor.MethodDescriptor(
    name='Send',
    full_name='TransferBatchData.Send',
    index=0,
    containing_service=None,
    input_type=_BATCHDATA,
    output_type=_RECEIVEREPLY,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_TRANSFERBATCHDATA)

DESCRIPTOR.services_by_name['TransferBatchData'] = _TRANSFERBATCHDATA

# @@protoc_insertion_point(module_scope)
